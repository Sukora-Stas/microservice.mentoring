server:
  port: 8081
  error:
    whitelabel:
      enabled: false
spring:
  application:
    name: resource-service
  aop:
    proxy-target-class: false
  main:
    allow-bean-definition-overriding: true
  web:
    locale: en
    resources:
      add-mappings: false
  profiles:
    active: ${SPRING_ACTIVE_PROFILES:dev}
  jmx:
    enabled: false
  mvc:
    throw-exception-if-no-handler-found: true
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
  output:
    ansi:
      enabled: detect
  sql:
    init:
      platform: postgres
  datasource:
    driverClassName: org.postgresql.Driver
    url: ${JDBC_DOCKER_DATABASE_URL:JDBC_LOCAL_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
    hikari:
      auto-commit: false
  flyway:
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0.0
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 15MB
  rabbitmq:
    host: ${RABBIT_HOST}
    port: ${RABBIT_PORT}
    username: ${RABBIT_USERNAME}
    password: ${RABBIT_PASSWORD}
    exchange-name: ${RABBIT_RESOURCE_CREATED_EXCHANGE_NAME}
    publisher-returns: true
    publisher-confirm-type: CORRELATED
    template:
      mandatory: true
    producer:
      retries-count: ${RABBIT_PRODUCER_RETRIES_COUNT}
      base-retry-delay: ${RABBIT_PRODUCER_BASE_RETRY_DELAY}
      max-retry-delay: ${RABBIT_PRODUCER_MAX_RETRY_DELAY}
      retry-delay-multiplier: ${RABBIT_PRODUCER_RETRY_DELAY_MULTIPLIER}
      task-retry-delay: ${RABBIT_PRODUCER_TASK_RETRY_DELAY}

cloud:
  aws:
    region: ${AWS_DEFAULT_REGION}
    s3:
      url: ${AWS_S3_URL}
      bucket: ${AWS_S3_BUCKET_NAME}
      access-key: ${AWS_S3_ACCESS_KEY}
      secret-key: ${AWS_S3_SECRET_KEY}